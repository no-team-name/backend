name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Docker Buildx 설정 (멀티플랫폼 빌드 지원)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Spring Backend Docker 이미지 빌드 및 푸시
      - name: Build and push Spring Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: cassidy65/accord-spring:latest

      # 6. EC2에 배포
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 환경 변수 및 설정 파일 준비
            mkdir -p /home/ubuntu/config
            echo "${{ secrets.APPLICATION_YML }}" | sed 's/\\n/\n/g' > /home/ubuntu/config/application.yml
            chmod 600 /home/ubuntu/config/application.yml

            # 기존 컨테이너 중지 및 삭제
            cd /home/ubuntu
            sudo docker-compose down || true

            # 최신 이미지 가져오기
            sudo docker pull cassidy65/accord-gateway:latest
            sudo docker pull cassidy65/accord-spring:latest
            sudo docker pull cassidy65/go-server:latest

            # Docker Compose 실행
            sudo docker-compose up -d
